//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//     Support: http://www.cnblogs.com/huxj
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace JiangNan.MS.DataMap
{

    /// <summary>
    /// 实体类SecondLevelConfigItem 。(属性说明自动提取数据库字段的描述信息)
    /// </summary>
    [Serializable]
    public partial class SecondLevelConfigItem : Entity
    {
        public SecondLevelConfigItem() : base("MS_SecondLevelConfigItem") { }

        #region Model
        private int _Id;
        private int _SecondLevelId;
        private string _ItemName;
        /// <summary>
        /// 
        /// </summary>
        public int Id
        {
            get { return _Id; }
            set
            {
                this.OnPropertyValueChange(_.Id, _Id, value);
                this._Id = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public int SecondLevelId
        {
            get { return _SecondLevelId; }
            set
            {
                this.OnPropertyValueChange(_.SecondLevelId, _SecondLevelId, value);
                this._SecondLevelId = value;
            }
        }
        /// <summary>
        /// 
        /// </summary>
        public string ItemName
        {
            get { return _ItemName; }
            set
            {
                this.OnPropertyValueChange(_.ItemName, _ItemName, value);
                this._ItemName = value;
            }
        }
        #endregion

        #region Method
        /// <summary>
        /// 获取实体中的标识列
        /// </summary>
        public override Field GetIdentityField()
        {
            return _.Id;
        }
        /// <summary>
        /// 获取实体中的主键列
        /// </summary>
        public override Field[] GetPrimaryKeyFields()
        {
            return new Field[] {
				_.Id};
        }
        /// <summary>
        /// 获取列信息
        /// </summary>
        public override Field[] GetFields()
        {
            return new Field[] {
				_.Id,
				_.SecondLevelId,
				_.ItemName};
        }
        /// <summary>
        /// 获取值信息
        /// </summary>
        public override object[] GetValues()
        {
            return new object[] {
				this._Id,
				this._SecondLevelId,
				this._ItemName};
        }
        #endregion

        #region _Field
        /// <summary>
        /// 字段信息
        /// </summary>
        public class _
        {
            /// <summary>
            /// * 
            /// </summary>
            public readonly static Field All = new Field("*", "MS_SecondLevelConfigItem");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field Id = new Field("Id", "MS_SecondLevelConfigItem", "Id");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field SecondLevelId = new Field("SecondLevelId", "MS_SecondLevelConfigItem", "SecondLevelId");
            /// <summary>
            /// 
            /// </summary>
            public readonly static Field ItemName = new Field("ItemName", "MS_SecondLevelConfigItem", "ItemName");
        }
        #endregion


    }
}

